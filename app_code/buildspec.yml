version: 0.2

env:
  variables:
    AWS_REGION_NAME: ap-northeast-1
    ECR_REPOSITORY_NAME: boilerplate-app-ecr-repo
    DOCKER_BUILDKIT: "1"
  parameter-store:
    # DOCKERHUB_USER: boilerplate-docker-hub-username
    # DOCKERHUB_PASS: boilerplate-docker-hub-password
    APP_BOUND_ADDRESS: APP_BOUND_ADDRESS
    FRONTEND_ORIGIN: FRONTEND_ORIGIN
    VALID_ORIGIN_VALUE: VALID_ORIGIN_VALUE
    VALID_REFERER_VALUE: VALID_REFERER_VALUE
    DB_URL: DB_URL
    REDIS_ADDRESS: REDIS_ADDRESS
    REDIS_COOKIE_SESSION_PRIVATE_KEY: REDIS_COOKIE_SESSION_PRIVATE_KEY
    RUST_LOG: RUST_LOG
    RUST_BACKTRACE: RUST_BACKTRACE

phases:
  pre_build:
    commands:
      - $(aws ecr get-login --region ${AWS_REGION_NAME} --no-include-email)
      - AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query 'Account' --output text)
      - REPOSITORY_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION_NAME}.amazonaws.com/${ECR_REPOSITORY_NAME}
      - IMAGE_TAG=$(echo ${CODEBUILD_RESOLVED_SOURCE_VERSION} | cut -c 1-7)
      # Docker Hub Login
      #      - echo Logging in to Docker Hub...
      #      - echo $DOCKERHUB_USER
      #      - echo $DOCKERHUB_PASS | docker login -u $DOCKERHUB_USER --password-stdin
  build:
    commands:
      - docker build -t ${REPOSITORY_URI}:latest -f dev.dockerfile .
      - docker tag ${REPOSITORY_URI}:latest ${REPOSITORY_URI}:${IMAGE_TAG}
  post_build:
    commands:
      - docker push ${REPOSITORY_URI}:${IMAGE_TAG}
      - printf '{"name":"%s","ImageURI":"%s"}' $ECR_REPOSITORY_NAME $REPOSITORY_URI:$IMAGE_TAG > imageDetail.json
artifacts:
  files:
    - imageDetail.json